	.text   # Preamble code
.LC0:
	.string	"%d\n"   # "%d\n" for printf()
printint:
	pushq	%rbp
	movq	%rsp, %rbp    # Set the frame pointer
	subq	$16, %rsp
	movl	%edi, -4(%rbp)
	movl	-4(%rbp), %eax   # Get the printint() argument
	movl	%eax, %esi
	leaq	.LC0(%rip), %rdi   # Get the pointer to "%d\n"
	movl	$0, %eax
	call	printf@PLT      # Call printf()
	nop
	leave                   # and return
	ret

	.globl	main
	.type	main, @function
main:
	pushq	%rbp		 # Set the frame pointer
	movq	%rsp, %rbp	 # End of preamble code
	movq	$2, %r8		 # %r8 = 2
	movq	$3, %r9		 # %r9 = 3
	movq	$5, %r10	 # %r10 = 5	
	imulq	%r9, %r10	 # %r10 = 3 * 5 = 15
	addq	%r8, %r10    # %r10 = 2 + 15 = 17
						# %r8 and %r9 are now free again	
	movq	$8, %r8		# %r8 = 8
	movq	$3, %r9		# %r9 = 3
	movq	%r8,%rax	 
	cqo					 # Load dividend %rax with 8
	idivq	%r9			 # Divide by 3
	movq	%rax,%r8	 # Store quotient in %r8, i.e. 2
	subq	%r8, %r10	 # %r10 = 17 - 2 = 15
	movq	%r10, %rdi	# Copy 15 into %rdi in preparation
	call	printint	# to call printint()
	movl	$0, %eax	# Postamble: call exit(0)
	popq	%rbp
	ret
